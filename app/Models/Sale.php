<?php

namespace App\Models;

use App\Traits\Mediable;
use App\Traits\Notifiable;
use App\Traits\Scorable;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;

class Sale extends Model
{
    use HasFactory, SoftDeletes, Mediable, Scorable,Notifiable;

    protected $fillable = ["receipt_date", "user_id", "status", "active", "summary"];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::created(function ($model) {
            $user = Auth::guard('api')->user();
            if ($user) {
                $model->user_id = $user->id;
                $model->save();
            }
        });

    }

    public function items(): HasMany
    {
        return $this->hasMany(SaleItem::class, 'receipt_id');
    }

    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    public function reasons(): HasMany
    {
        return $this->hasMany(SaleReason::class, 'sale_id');
    }

}
